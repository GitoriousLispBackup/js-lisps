(((name "Jisp")
  (url "http://www.ducklet.com/jisp/")
  (dialect custom)
  (build-deps)
  (runtime-deps 7.5)
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2007)
  (license unknown)
  (comment "Uses brackets instead of parentheses and commas to separate list elements. Seems to be in a very early development stage, .")) 

 ((name "Sibilant")
  (url "https://github.com/jbr/sibilant")
  (dialect common-lisp)
  (build-deps "node.js" "npm")
  (runtime-deps 76 "The demo at " (a (@ (href "http://sibilantjs.info/")) "http://sibilantjs.info/")
                " runs in the browser but it's not clear from the documentation whether Sibilant is actually meant to be used in the browser.")
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license MIT)
  (comment "JSON literals. Doesn't have \"let\""))

 ((name "Marc Belmont's Lisp")
  (url "http://code.google.com/p/javascript-lisp-interpreter/")
  (dialect common-lisp)
  (build-deps)
  (runtime-deps 6.4)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2010)
  (license GPLv2)
  (comment "Very small and primitive implementation which could perhaps be extended into a more comprehensive system. Uses jQuery."))


 ((name "Javathcript")
  (url "http://kybernetikos.github.com/Javathcript/")
  (dialect custom)
  (build-deps)
  (runtime-deps 44.9)
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2010)
  (license unknown)
  (comment "The code seems to be very modular so it is probably a good canidate for building custom Lisp systems."))

 ((name "Parenscript")
  (url "http://common-lisp.net/project/parenscript/")
  (dialect common-lisp)
  (build-deps "Common Lisp")
  (runtime-deps)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2012)
  (license BSD)
  (comment "One of the more mature implementations. Implements namespaces, has an optional object system and some SLIME support."))

 ((name "js-lisp")
  (url "https://github.com/stevela/js-lisp/")
  (dialect common-lisp)
  (build-deps)
  (runtime-deps 52)
  (compiler #f)
  (interpreter #t)
  (interop #f)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2009)
  (license Apache-2.0)
  (comment "A toy implementation that uses a JS/CC grammar to generate the parser."))

 ((name "Dmitry Nizhegorodov's Lisp System")
  (url "http://www.dmitrynizh.com/lisp.html")
  (dialect common-lisp)
  (build-deps)
  (runtime-deps 44)
  (compiler #t)
  (interpreter #t)
  (interop #f)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2007)
  (license non-commercial)
  (comment "A small system that sports macros."))

 ((name "Acheron Lisp")
  (url "http://acheron.sourceforge.net/")
  (dialect common-lisp)
  (build-deps "Java")
  (runtime-deps)
  (compiler #t)
  (interpreter #f "There is an interpreter but it can only be used outside the browser (written in Java, as well)")
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #f)
  (activity 2011)
  (license GPLv3)
  (comment "Not much documentation but "
           (a (@ (href "http://acheron.defmacro.de/pub/Presentation_LispNYC.pdf")) "this presentation")
           " has some details."))

 ((name "lisp2js")
  (url "http://gacelaproject.org/lisp2js/")
  (dialect common-lisp)
  (build-deps "Common Lisp")
  (runtime-deps)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2010)
  (license GPLv3)
  (comment "No documentation, pretty bare bones. Seems to have vanished from the web as of 2012. "))

 ((name "jsScheme")
  (url "http://www.bluishcoder.co.nz/jsscheme/")
  (dialect scheme)
  (build-deps)
  (runtime-deps 200)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #t)
  (debugging #t)
  (activity 2006)
  (license GPLv3)
  (comment "Not really a library, only distributed embedded in a web page. R5RS compliant."))

 ((name "The Little JavaScripter")
  (url "http://javascript.crockford.com/little.html")
  (dialect scheme)
  (build-deps)
  (runtime-deps 20)
  (compiler #f)
  (interpreter #t)
  (interop #f)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license unknown)
  (comment "Based on the implementation given in Chapter 10 of The Little Schemer and thus very simple."))

 ((name "scheme2js")
  (url "http://www-sop.inria.fr/indes/scheme2js/")
  (dialect scheme)
  (build-deps "Bigloo Scheme")
  (runtime-deps 136)
  (compiler #t)
  (interpreter #f)
  (interop #f)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license GPLv3)
  (comment "Mostly R5RS compliant. Runtime dependencies can be stripped down by disabling continuations."))

 ((name "BiwaScheme")
  (url "http://www.biwascheme.org/")
  (dialect scheme)
  (build-deps)
  (runtime-deps 188)
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license MIT)
  (comment "Mostly R6RS compliant. Features a custom debugger and a few additional libraries."))

 ((name "Spock")
  (url "http://wiki.call-cc.org/eggref/4/spock")
  (dialect scheme)
  (build-deps "Chicken Scheme")
  (runtime-deps 84)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #t)
  (debugging #t)
  (activity 2011)
  (license BSD)
  (comment "Mostly R5RS compliant. The compiler uses the Cheney-on-the-MTA compilation strategy. Internet Explorer is not fully supported."))

 ((name "js-scheme")
  (url "http://code.google.com/p/js-scheme/")
  (dialect scheme)
  (build-deps)
  (runtime-deps 196 "includes Prototype")
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #t)
  (macros #f)
  (hygiene #f)
  (debugging #f)
  (activity 2010)
  (license GPLv3)
  (comment "Mostly R5RS compliant. Only supports escape continuations in latest version."))

 ((name "JScreme")
  (url "http://www.complang.tuwien.ac.at/schani/blog/jscreme.html")
  (dialect scheme)
  (build-deps)
  (runtime-deps 68)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #f)
  (activity 2010)
  (license unknown)
  (comment "Guile is required for bootstrapping but afterwards JScreme is able to compile itself."))

 ((name "GoldenScheme")
  (url "http://goldenscheme.accelart.jp/")
  (dialect scheme)
  (build-deps)
  (runtime-deps 8)
  (compiler #f)
  (interpreter #t)
  (interop #f)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2008)
  (license BSD)
  (comment "Source code comments are in Japanese."))

 ((name "CPSCM")
  (url "http://www.omnigia.com/scheme/cpscm/home/")
  (dialect scheme)
  (build-deps "Chicken Scheme or SISC")
  (runtime-deps 116)
  (compiler #t)
  (interpreter #f)
  (interop #f)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #t)
  (debugging #f)
  (activity 2007)
  (license GPLv2)
  (comment "CPS-based compiler. Can also compile to Common Lisp."))

 ((name "Fargo")
  (url "http://fargo.jcoglan.com/")
  (dialect scheme)
  (build-deps)
  (runtime-deps 148)
  (compiler #f)
  (interpreter #t)
  (interop #f)
  (tco #t)
  (continuations #f)
  (macros #t)
  (hygiene #t)
  (debugging #t)
  (activity 2011)
  (license MIT)
  (comment "Can also run on Node.js. Implements Fibers instead of continuations."))

 ((name "Ralph")
  (url "https://github.com/turbolent/ralph")
  (dialect dylan)
  (build-deps "node.js")
  (runtime-deps 196)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #f)
  (macros #t)
  (hygiene #t)
  (debugging #t)
  (activity 2012)
  (license MIT)
  (comment "Implements the original prefix notated S-expression Dylan minus multi-methods and multiple inheritance. " (a (@ (href "http://turbolent.github.com/hula-presentation/")) "A browser based IDE is available.")))

 ((name "nconc")
  (url "https://github.com/patrickdlogan/nconc")
  (dialect scheme)
  (build-deps)
  (runtime-deps 132)
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #t)
  (macros #f)
  (hygiene #f)
  (debugging #f)
  (activity 2011)
  (license GPLv3)
  (comment "Uses Underscore.js for sequence operations. Clojure is needed for buliding the runtime."))

 ((name "EdgeLisp")
  (url "https://github.com/manuel/edgelisp")
  (dialect common-lisp)
  (build-deps)
  (runtime-deps 92)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #t)
  (debugging #t)
  (activity 2011)
  (license AGPL)
  (comment "Ships a CLOS-like object system."))

 ((name "Scriptjure")
  (url "https://github.com/arohner/scriptjure/")
  (dialect clojure)
  (build-deps "Clojure")
  (runtime-deps)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license EPL)
  (comment "Is meant to be used in Clojure applications to generate JavaScript."))

 ((name "ClojureJS")
  (url "https://github.com/kriyative/clojurejs")
  (dialect clojure)
  (build-deps "Clojure")
  (runtime-deps)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2012)
  (license EPL)
  (comment "Includes utility macros for generating HTML on the client side. Clojure's TCO work-around loop/recur is also supported."))

 ((name "ClojureScript")
  (url "https://github.com/clojure/clojurescript/")
  (dialect clojure)
  (build-deps "Clojure")
  (runtime-deps 279)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #t)
  (debugging #f)
  (activity 2012)
  (license EPL)
  (comment "The compiler is designed to emit JavaScript code which is compatible with the advanced compilation mode of the Google Closure optimizing compiler. The runtime dependency size is calculated without any optimizations."))

 ((name "substandard-lisp")
  (url "http://code.google.com/p/substandard-lisp/")
  (dialect standard-lisp)
  (build-deps)
  (runtime-deps 136)
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #f)
  (activity 2011)
  (license GPLv3)
  (comment "Some parts are written in CoffeeScript. Macros are almost ready."))

 ((name "WdS17")
  (url "http://norstrulde.org/ilge10")
  (dialect custom)
  (build-deps)
  (runtime-deps)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #f)
  (activity 2010)
  (license "public domain")
  (comment "Used to make HTML canvas games like "
           (a (@ (href "http://norstrulde.org/slgj11/")) "Henri's Reef")
           "."))

 ((name "Cell")
  (url "http://cell-lang.org/")
  (dialect custom)
  (build-deps)
  (runtime-deps 60)
  (compiler #f)
  (interpreter #t)
  (interop #f)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #f)
  (activity 2012)
  (license EPL)
  (comment "A toy dialect based on the original Lisp specification, borrowing some ideas from Clojure."))

 ((name "LispyScript")
  (url "http://lispyscript.com/")
  (dialect custom)
  (build-deps "node.js")
  (runtime-deps 16)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2012)
  (license MIT)
  (comment "A Lisp syntax for JavaScript which allows inline mixing with JavaScript literals. It claims TCO but it's limited to the " (tt "loop") " form."))

 ((name "emuLisp")
  (url "http://folk.uio.no/jkleiser/pico/emuLisp/")
  (dialect pico-lisp)
  (build-deps)
  (runtime-deps 52)
  (compiler #f)
  (interpreter #t)
  (interop #f)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #f)
  (activity 2011)
  (license unknown)
  (comment "Only a subset of " (a (@ (href "http://picolisp.com/")) "PicoLisp") " is implemented. Note that macros in PicoLisp are really fexprs."))

 ((name "SLip")
  (url "http://slip.lisperator.net/")
  (dialect common-lisp)
  (build-deps)
  (runtime-deps 212)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #f)
  (debugging #f)
  (activity 2007)
  (license unknown)
  (comment "Sports a custom multi-threading system and comes with a TinyCLOS port, a basic FORMAT implementation and a Ymacs-based development environment."))

 ((name "JavaScriptScheme")
  (url "http://dynamo.iro.umontreal.ca/~gambit/wiki/index.php/Dumping_Grounds#Language")
  (dialect scheme)
  (build-deps "Gambit-C")
  (runtime-deps 60)
  (compiler #t)
  (interpreter #f)
  (interop #f)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #f)
  (debugging #f)
  (activity 2008)
  (license unknown)
  (comment "A continuation-passing style compiler that provides green threads."))

)
