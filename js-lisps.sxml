(((name "Jisp")
  (url "http://www.ducklet.com/jisp/")
  (dialect custom)
  (build-deps)
  (runtime-deps 7.5)
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2007)
  (license unknown)
  (comment "Uses brackets instead of parentheses and commas to separate list elements. Seems to be in a very early development stage, .")) 

 ((name "Sibilant")
  (url "https://github.com/jbr/sibilant")
  (dialect common-lisp)
  (build-deps "node.js" "npm")
  (runtime-deps 76 "The demo at " (a (@ (href "http://sibilantjs.info/")) "http://sibilantjs.info/")
                " runs in the browser but it's not clear from the documentation whether Sibilant is actually meant to be used in the browser.")
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license MIT)
  (comment "JSON literals. Doesn't have \"let\""))

 ((name "Marc Belmont's Lisp")
  (url "http://code.google.com/p/javascript-lisp-interpreter/")
  (dialect common-lisp)
  (build-deps)
  (runtime-deps 6.4)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2010)
  (license GPLv2)
  (comment "Very small and primitive implementation which could perhaps be extended into a more comprehensive system. Uses jQuery."))


 ((name "Javathcript")
  (url "http://kybernetikos.github.com/Javathcript/")
  (dialect custom)
  (build-deps)
  (runtime-deps 44.9)
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2010)
  (license unknown)
  (comment "The code seems to be very modular so it is probably a good canidate for building custom Lisp systems."))

 ((name "Parenscript")
  (url "http://common-lisp.net/project/parenscript/")
  (dialect common-lisp)
  (build-deps "Common Lisp")
  (runtime-deps)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license BSD)
  (comment "One of the more mature implementations. Implements namespaces, has an optional object system and some SLIME support."))

 ((name "js-lisp")
  (url "https://github.com/stevela/js-lisp/")
  (dialect common-lisp)
  (build-deps)
  (runtime-deps 52)
  (compiler #f)
  (interpreter #t)
  (interop #f)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2009)
  (license Apache-2.0)
  (comment "A toy implementation that uses a JS/CC grammar to generate the parser."))

 ((name "Dmitry Nizhegorodov's Lisp System")
  (url "http://www.dmitrynizh.com/lisp.html")
  (dialect common-lisp)
  (build-deps)
  (runtime-deps 44)
  (compiler #t)
  (interpreter #t)
  (interop #f)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2007)
  (license non-commercial)
  (comment "A small system that sports macros."))

 ((name "Caterwaul")
  (url "http://caterwauljs.org/")
  (dialect custom)
  (build-deps)
  (runtime-deps 60)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #t)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license MIT)
  (comment "An extension of JavaScript that provides a Lispy macro system (although I couldn't find documentation on how to actually define macros)."))

 ((name "Acheron Lisp")
  (url "http://acheron.sourceforge.net/")
  (dialect common-lisp)
  (build-deps "Java")
  (runtime-deps)
  (compiler #t)
  (interpreter #f "There is an interpreter but it can only be used outside the browser (written in Java, as well)")
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #f)
  (activity 2011)
  (license GPLv3)
  (comment "Not much documentation but "
           (a (@ (href "http://acheron.defmacro.de/pub/Presentation_LispNYC.pdf")) "this presentation")
           " has some details."))

 ((name "lisp2js")
  (url "http://www.jsancho.org/gacela/lisp2js/")
  (dialect common-lisp)
  (build-deps "Common Lisp")
  (runtime-deps)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2010)
  (license GPLv3)
  (comment "No documentation, pretty bare bones."))

 ((name "jsScheme")
  (url "http://www.bluishcoder.co.nz/jsscheme/")
  (dialect scheme)
  (build-deps)
  (runtime-deps 200)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #t)
  (debugging #t)
  (activity 2006)
  (license GPLv3)
  (comment "Not really a library, only distributed embedded in a web page. R5RS compliant."))

 ((name "The Little JavaScripter")
  (url "http://javascript.crockford.com/little.html")
  (dialect scheme)
  (build-deps)
  (runtime-deps 20)
  (compiler #f)
  (interpreter #t)
  (interop #f)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license unknown)
  (comment "Based on the implementation given in Chapter 10 of The Little Schemer and thus very simple."))

 ((name "scheme2js")
  (url "http://www-sop.inria.fr/indes/scheme2js/")
  (dialect scheme)
  (build-deps "Bigloo Scheme")
  (runtime-deps 136)
  (compiler #t)
  (interpreter #f)
  (interop #f)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license GPLv3)
  (comment "Mostly R5RS compliant. Runtime dependencies can be stripped down by disabling continuations."))

 ((name "BiwaScheme")
  (url "http://www.biwascheme.org/")
  (dialect scheme)
  (build-deps)
  (runtime-deps 188)
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license MIT)
  (comment "Mostly R6RS compliant. Features a custom debugger and a few additional libraries."))

 ((name "Spock")
  (url "http://wiki.call-cc.org/eggref/4/spock")
  (dialect scheme)
  (build-deps "Chicken Scheme")
  (runtime-deps 84)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #t)
  (debugging #f)
  (activity 2011)
  (license BSD)
  (comment "Mostly R5RS compliant. The compiler uses the Cheney-on-the-MTA compilation strategy. Internet Explorer is not fully supported."))

 ((name "js-scheme")
  (url "http://www.biwascheme.org/")
  (dialect scheme)
  (build-deps)
  (runtime-deps 196 "includes Prototype")
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #t)
  (macros #f)
  (hygiene #f)
  (debugging #f)
  (activity 2010)
  (license GPLv3)
  (comment "Mostly R5RS compliant. Only supports escape continuations in latest version."))

 ((name "JScreme")
  (url "http://www.complang.tuwien.ac.at/schani/blog/jscreme.html")
  (dialect scheme)
  (build-deps)
  (runtime-deps 68)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #f)
  (activity 2010)
  (license unknown)
  (comment "Guile is required for bootstrapping but afterwards JScreme is able to compile itself."))

 ((name "GoldenScheme")
  (url "http://goldenscheme.accelart.jp/")
  (dialect scheme)
  (build-deps)
  (runtime-deps 8)
  (compiler #f)
  (interpreter #t)
  (interop #f)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2008)
  (license BSD)
  (comment "Source code comments are in Japanese."))

 ((name "CPSCM")
  (url "http://www.omnigia.com/scheme/cpscm/home/")
  (dialect scheme)
  (build-deps "Rhino")
  (runtime-deps 116)
  (compiler #t)
  (interpreter #f)
  (interop #f)
  (tco #t)
  (continuations #t)
  (macros #t)
  (hygiene #t)
  (debugging #f)
  (activity 2007)
  (license GPLv2)
  (comment "CPS-based compiler. Can also compile to Common Lisp."))

 ((name "Fargo")
  (url "http://fargo.jcoglan.com/")
  (dialect scheme)
  (build-deps)
  (runtime-deps 148)
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #f)
  (macros #t)
  (hygiene #t)
  (debugging #t)
  (activity 2011)
  (license MIT)
  (comment "Can also run on Node.js. Implements Fibers instead of continuations."))

 ((name "Ralph")
  (url "https://github.com/turbolent/ralph")
  (dialect dylan)
  (build-deps "python" "node.js")
  (runtime-deps 64)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #f)
  (activity 2011)
  (license BSD)
  (comment "Implements the original prefix notated S-expression Dylan minus multi-methods and multiple inheritance."))

 ((name "nconc")
  (url "https://github.com/patrickdlogan/nconc")
  (dialect scheme)
  (build-deps)
  (runtime-deps 132)
  (compiler #f)
  (interpreter #t)
  (interop #t)
  (tco #t)
  (continuations #t)
  (macros #f)
  (hygiene #f)
  (debugging #f)
  (activity 2011)
  (license GPLv3)
  (comment "Uses Underscore.js for sequence operations. Clojure is needed for buliding the runtime."))

 ((name "EdgeLisp")
  (url "https://github.com/manuel/edgelisp")
  (dialect common-lisp)
  (build-deps)
  (runtime-deps 92)
  (compiler #t)
  (interpreter #t)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #t)
  (debugging #t)
  (activity 2011)
  (license AGPL)
  (comment "Ships a CLOS-like object system."))

 ((name "Scriptjure")
  (url "https://github.com/arohner/scriptjure/")
  (dialect clojure)
  (build-deps "Clojure")
  (runtime-deps)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #f)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license EPL)
  (comment "Is meant to be used in Clojure applications to generate JavaScript."))

 ((name "ClojureJS")
  (url "https://github.com/kriyative/clojurejs")
  (dialect clojure)
  (build-deps "Clojure")
  (runtime-deps)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #f)
  (debugging #t)
  (activity 2011)
  (license EPL)
  (comment "Includes utility macros for generating HTML on the client side. Clojure's TCO work-around loop/recur is also supported."))

 ((name "ClojureScript")
  (url "https://github.com/kriyative/clojurejs")
  (dialect clojure)
  (build-deps "Clojure")
  (runtime-deps 312)
  (compiler #t)
  (interpreter #f)
  (interop #t)
  (tco #f)
  (continuations #f)
  (macros #t)
  (hygiene #t)
  (debugging #f)
  (activity 2009)
  (license EPL)
  (comment "A compiler that aims to compile Clojure's core.")))